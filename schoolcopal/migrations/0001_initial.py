# Generated by Django 4.2.24 on 2025-09-10 04:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant'), ('parent', 'Parent'), ('directeur', 'Directeur')], default='parent', max_length=20, verbose_name='Rôle')),
                ('telephone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Format téléphone camerounais : +237XXXXXXXX', regex='^\\+237\\d{8}$')], verbose_name='Téléphone')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClasseScolaire',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('niveau', models.CharField(choices=[('SIL', 'SIL'), ('CP', 'CP'), ('CE1', 'CE1'), ('CE2', 'CE2'), ('CM1', 'CM1'), ('CM2', 'CM2')], max_length=10, verbose_name='Niveau')),
                ('section', models.CharField(blank=True, max_length=5, verbose_name='Section')),
                ('capacite', models.IntegerField(default=50, verbose_name='Capacité')),
            ],
            options={
                'verbose_name': 'Classe Scolaire',
                'verbose_name_plural': 'Classes Scolaires',
            },
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('nom', models.CharField(max_length=255, verbose_name="Nom de l'école")),
                ('adresse', models.TextField(verbose_name='Adresse')),
                ('type', models.CharField(choices=[('publique', 'Publique'), ('privee', 'Privée')], default='privee', max_length=20, verbose_name="Type d'école")),
                ('nombre_classes', models.IntegerField(default=6, verbose_name='Nombre de classes')),
            ],
            options={
                'verbose_name': 'École',
                'verbose_name_plural': 'Écoles',
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('age', models.IntegerField(verbose_name='Âge')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('sexe', models.CharField(choices=[('garcon', 'Garçon'), ('fille', 'Fille')], max_length=10, verbose_name='Sexe')),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eleves', to='schoolcopal.classescolaire', verbose_name='Classe')),
                ('ecole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='schoolcopal.ecole', verbose_name='École')),
                ('parent_id', models.ForeignKey(limit_choices_to={'role': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='enfants', to=settings.AUTH_USER_MODEL, verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('salaire', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Salaire')),
                ('classe', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enseignant', to='schoolcopal.classescolaire', verbose_name='Classe assignée')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enseignant_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la matière')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='schoolcopal.classescolaire', verbose_name='Classe')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'unique_together': {('classe', 'nom')},
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant')),
                ('date_paiement', models.DateField(verbose_name='Date de paiement')),
                ('statut', models.CharField(choices=[('paye', 'Payé'), ('impaye', 'Impayé')], default='impaye', max_length=20, verbose_name='Statut')),
                ('mode', models.CharField(choices=[('cash', 'Cash'), ('mobile_money', 'Mobile Money')], max_length=20, verbose_name='Mode de paiement')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='schoolcopal.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('message', models.TextField(verbose_name='Message')),
                ('type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email')], max_length=20, verbose_name='Type')),
                ('envoye', models.BooleanField(default=False, verbose_name='Envoyé')),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmploiDuTemps',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('jour', models.CharField(choices=[('lundi', 'Lundi'), ('mardi', 'Mardi'), ('mercredi', 'Mercredi'), ('jeudi', 'Jeudi'), ('vendredi', 'Vendredi'), ('samedi', 'Samedi')], max_length=20, verbose_name='Jour')),
                ('heure', models.TimeField(verbose_name='Heure')),
                ('salle', models.CharField(max_length=50, verbose_name='Salle')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emplois', to='schoolcopal.classescolaire', verbose_name='Classe')),
            ],
            options={
                'verbose_name': 'Emploi du Temps',
                'verbose_name_plural': 'Emplois du Temps',
                'ordering': ['jour', 'heure'],
            },
        ),
        migrations.AddField(
            model_name='classescolaire',
            name='ecole',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='schoolcopal.ecole', verbose_name='École'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Note (0-20)')),
                ('trimestre', models.IntegerField(choices=[(1, '1er'), (2, '2e'), (3, '3e')], verbose_name='Trimestre')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='schoolcopal.eleve', verbose_name='Élève')),
                ('enseignant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_saisies', to='schoolcopal.enseignant', verbose_name='Enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='schoolcopal.matiere', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'unique_together': {('eleve', 'matiere', 'trimestre')},
            },
        ),
        migrations.CreateModel(
            name='Frequence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de suppression')),
                ('date', models.DateField(verbose_name='Date')),
                ('present', models.BooleanField(default=True, verbose_name='Présent')),
                ('raison_absence', models.TextField(blank=True, verbose_name='Raison absence')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequents', to='schoolcopal.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Fréquentation',
                'verbose_name_plural': 'Fréquentations',
                'unique_together': {('eleve', 'date')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classescolaire',
            unique_together={('ecole', 'niveau', 'section')},
        ),
    ]
